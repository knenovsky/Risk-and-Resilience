{"frames":[{"func":"createXgboostData_tuned(numberofruns = run[1:1000], Xgboostinput_filtered = Xgboostinput_filtered, \n    features = features, Label = Label)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"caret::train(x = train_data %>% dplyr::select(any_of(features)), \n    y = train_data %>% pull(Label), method = \"xgbTree\", verbosity = 1, \n    tuneLength = 1)","file":"../libraries/00_toolbox.R","line_number":747,"end_line_number":752,"character_number":5,"end_character_number":5},{"func":"train.default(x = train_data %>% dplyr::select(any_of(features)), \n    y = train_data %>% pull(Label), method = \"xgbTree\", verbosity = 1, \n    tuneLength = 1)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"nominalTrainWorkflow(x = x, y = y, wts = weights, info = trainInfo, \n    method = models, ppOpts = preProcess, ctrl = trControl, lev = classLevels, \n    ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"foreach(iter = seq(along = resampleIndex), .combine = \"c\", .verbose = FALSE, \n    .export = export, .packages = \"caret\") %:% foreach(parm = 1L:nrow(info$loop), \n    .combine = \"c\", .verbose = FALSE, .export = export, .packages = \"caret\") %op% \n    { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"e$fun(obj, substitute(ex), parent.frame(), e$data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mclapply(argsList, FUN, mc.preschedule = preschedule, mc.set.seed = set.seed, \n    mc.silent = silent, mc.cores = cores)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"selectChildren(ac[!fin], -1)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"StopIteration"}