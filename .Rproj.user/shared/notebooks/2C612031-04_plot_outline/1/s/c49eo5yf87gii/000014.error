{"frames":[{"func":"caret::train(x = train_data %>% dplyr::select(features_iso), \n    y = train_data %>% pull(Label), method = \"xgbTree\", tuneGrid = param_grid, \n    trControl = custom_control, verbosity = 1)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"train.default(x = train_data %>% dplyr::select(features_iso), \n    y = train_data %>% pull(Label), method = \"xgbTree\", tuneGrid = param_grid, \n    trControl = custom_control, verbosity = 1)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"nominalTrainWorkflow(x = x, y = y, wts = weights, info = trainInfo, \n    method = models, ppOpts = preProcess, ctrl = trControl, lev = classLevels, \n    ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"foreach(iter = seq(along = resampleIndex), .combine = \"c\", .verbose = FALSE, \n    .export = export, .packages = \"caret\") %:% foreach(parm = 1L:nrow(info$loop), \n    .combine = \"c\", .verbose = FALSE, .export = export, .packages = \"caret\") %op% \n    { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"e$fun(obj, substitute(ex), parent.frame(), e$data)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"clusterCall(cl, workerInit, c.expr, exportenv, pkgname, packages, \n    attachExportEnv)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"sendCall(cl[[i]], fun, list(...))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"postNode(con, \"EXEC\", list(fun = fun, args = args, return = return, \n    tag = tag))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"sendData(con, list(type = type, data = value, tag = tag))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"sendData.SOCK0node(con, list(type = type, data = value, tag = tag))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"serialize(data, node$con, xdr = FALSE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"summary(connection)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"summary.connection(connection)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in summary.connection(connection) : invalid connection\n"}